{"name":"Shortstack","tagline":"ShortStack: Comprehensive annotation and quantification of small RNA genes","body":"![ShortStack](http://plantsmallrnagenes.psu.edu/images/ShortStack.JPG)\r\n\r\nLICENSE\r\n    ShortStack\r\n\r\n    Copyright (C) 2012-2014 Michael J. Axtell\r\n\r\n    This program is free software: you can redistribute it and/or modify it\r\n    under the terms of the GNU General Public License as published by the\r\n    Free Software Foundation, either version 3 of the License, or (at your\r\n    option) any later version.\r\n\r\n    This program is distributed in the hope that it will be useful, but\r\n    WITHOUT ANY WARRANTY; without even the implied warranty of\r\n    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU General\r\n    Public License for more details.\r\n\r\n    You should have received a copy of the GNU General Public License along\r\n    with this program. If not, see <http://www.gnu.org/licenses/>.\r\n\r\nSYNOPSIS\r\n    Annotation and quantification of small RNA genes based upon\r\n    reference-aligned small RNA sequences\r\n\r\nCITATION\r\n    If you use ShortStack in your work, please cite\r\n\r\n    Axtell MJ. (2013) ShortStack: Comprehensive annotation and\r\n    quantification of small RNA genes. RNA 19:740-751.\r\n    doi:10.1261/rna.035279.112\r\n\r\n    Shahid S., Axtell MJ. (2013) Identification and annotation of small RNA\r\n    genes using ShortStack. Methods doi:10.1016/j.ymeth.2013.10.004\r\n\r\nAUTHOR\r\n    Michael J. Axtell, Penn State University, mja18@psu.edu\r\n\r\nDEPENDENCIES\r\n    perl samtools RNAfold butter bowtie bowtie-build maple\r\n\r\n    ShortStack is a perl5 script, so it needs perl5 to compile. It expects\r\n    to find perl5 at /usr/bin/perl. If this is not where your perl is,\r\n    modify line 1 of ShortStack (the hashbang) accordingly. It also requires\r\n    the package Getopt::Long, which I think is standard in most Perl\r\n    distributions. If this package is not installed, get it from CPAN.\r\n\r\n    samtools <http://samtools.sourceforge.net/> needs to be installed in\r\n    your PATH. ShortStack was developed using samtools 0.1.18. Other\r\n    versions should be OK as far as I know, but let me know if not!\r\n\r\n    RNAfold is from the ViennaRNA package. See\r\n    <http://www.tbi.univie.ac.at/~ronny/RNA/vrna2.html>. Both need to be\r\n    installed in your PATH.\r\n\r\n    butter (bowtie using iterative placement of repetitive small RNAs) ships\r\n    with ShortStack, and is also at http://github.com/MikeAxtell/butter . It\r\n    must be installed in your PATH.\r\n\r\n    bowtie and bowtie-build must be version \"1\" .. either 0.12.x or 1.x.\r\n    These are required ONLY if you are aligning reads to the genome. Bowtie\r\n    can be found at http://bowtie-bio.sourceforge.net/index.shtml. Like the\r\n    other dependencies, they must be in your PATH.\r\n\r\n    maple (microRNA analysis program leveraging expression) ships with\r\n    ShortStack, and is also at http://github.com/MikeAxtell/maple . It must\r\n    be installed in your PATH.\r\n\r\nINSTALL\r\n    There is no 'real' installation. After installing the dependencies (see\r\n    above), you should check to make sure the ShortStack is executable. It\r\n    should be, but if not you can:\r\n\r\n        chmod +x ShortStack\r\n                                                                                                 \r\n    Then add it to your PATH .. for instance\r\n\r\n    sudo cp ShortStack /usr/bin/\r\n\r\nUSAGE\r\n    ShortStack [options] [genome.fasta]\r\n\r\n    There are three modes which differ in the the types of pre-analysis that\r\n    are performed. Each of the modes has a different set of REQUIRED\r\n    options:\r\n\r\n    Mode 1: Trim small RNA-seq reads to remove 3' adapter seqeuence, align\r\n    them, and then analyze. Required options:\r\n\r\n    --reads\r\n\r\n    --adapter\r\n\r\n    Mode 2: Align pre-trimmed small RNA-seq reads, and then analyze.\r\n    Required option:\r\n\r\n    --reads\r\n\r\n    Mode 3: Analyze a pre-existing BAM alignment of small RNA-seq reads.\r\n    Required option:\r\n\r\n    --bamfile\r\n\r\n    Additionally, in modes 1 or 2, the option --align_only will terminate\r\n    analysis after making the alignment file.\r\n\r\nOPTIONS\r\n    --help : Print a help message and then quit.\r\n\r\n    --version : Print the version number and then quit.\r\n\r\n    --outdir [string] : Name of directory to be created to receive results\r\n    of the run. Deafults to \\\"ShortStack_[time]\\\", where time is \\\"UNIX\r\n    time\\\" (the number of non-leap seconds since Jan 1, 1970 UCT), if not\r\n    provided\r\n\r\n    --adapter [string] : Sequence of 3' adapter to search for during adapter\r\n    trimming. Must be at least 8 nts in length, and all ATGC characters. If\r\n    provided, reads will be trimmed.\r\n\r\n    --reads [string] : Path to reads file in fasta (.fa or .fasta\r\n    extension), fastq (.fastq or .fq extension), or colorspace-fasta\r\n    (.csfasta extension). Can be multiple files, separated by commas.\r\n    ShortStack knows the format only thought the file extensions.\r\n\r\n    --bowtie_cores [integer] : Number of processor cores to use during\r\n    bowtie / butter alignment. Default: 1.\r\n\r\n    --mismatches [integer] : Number of allowable mismatched for butter\r\n    alignment. Must be 0 or 1. Default: 0.\r\n\r\n    --max_rep [integer] : Reads with more than this number of possible\r\n    alignment positions will be reported as unmapped regardless of butter\r\n    density placement probabilities. Default: 1000.\r\n\r\n    --ranmax [integer] : Reads with more than this number of possible\r\n    alignment positions where the choice can't be guided by\r\n    butter-calculated probabilities will be reported as unmapped. Default:\r\n    3.\r\n\r\n    --HPscore : Minimum maple-derived score in order to keep a locus that\r\n    failed as a MIRNA as an HP locus. Deafult: 0.8.\r\n\r\n    --align_only : Exits program after completion of small RNA-seq data\r\n    alignment, creating BAM file.\r\n\r\n    --bamfile [string] : Path to properly formatted and sorted BAM alignment\r\n    file of small RNA-seq data. Files require custom tags provided by the\r\n    butter aligner.\r\n\r\n    --read_group [string] : Analyze only the indicated read-group.\r\n    Read-group must be specified in the bam alignment file header. Default =\r\n    [not active -- all reads analyzed]\r\n\r\n    --flag_file [string] : PATH to a simple file of genomic loci of\r\n    interest. The ShortStack-analyzed small RNA clusters will be analyzed\r\n    for overlap with the loci in the flag_file .. if there is any overlap\r\n    (as little as one nt), it will be reported. Format for this file is\r\n    describe below.\r\n\r\n    --mindepth [integer] : Minimum depth of mapping coverage to define an\r\n    'island'. Default = 20. Must be at least 2, more than 5 preferred.\r\n\r\n    --pad [integer] : Number of nucleotides upstream and downstream to\r\n    extend initial islands during cluster definition. Default = 100\r\n\r\n    --dicermin [integer] : Smallest size in the Dicer size range (or size\r\n    range of interest). Deafult = 20. Must be between 15 and 35, and less\r\n    than or equal to --dicermax\r\n\r\n    --dicermax [integer] : Largest size in the Dicer size range (or size\r\n    range of interest). Deafult = 24. Must be between 15 and 35, and more\r\n    than or equal to --dicermin\r\n\r\n    --miRType [string] : Either \\\"plant\\\" or \\\"animal\\\". Defaults to\r\n    \\\"plant\\\".\r\n\r\n    --minstrandfrac [float] : Minimum fraction of mappings to one or the\r\n    other strand call a polarity for non-hairpin clusters. Also the minimum\r\n    fraction of \\\"non-dyad\\\" mappings to the sense strand within potential\r\n    hairpins/miRNAs to keep the locus annotated as a hp or miRNA. See below\r\n    for details. Default = 0.8. Allowed values between 0.5 and 1.\r\n\r\n    --mindicerfrac [float] : Minimum fraction of mappings within Dicer size\r\n    range to annotate a locus as Dicer-derived. Default = 0.85. Allowed\r\n    values between 0 and 1.\r\n\r\n    --phasesize [integer] : Examine phasing only for clusters dominated by\r\n    the indicated size range. Size must be within the bounds described by\r\n    --dicermin and --dicermax. Set to 'all' to examine p-values of each\r\n    locus within the Dicer range, in its dominant size. Set to 'none' to\r\n    suppress all phasing analysis. Default = 21. Allowed values between\r\n    --dicermin and --dicermax.\r\n\r\n    --count [string] : Invokes count mode, in which user-provided clusters\r\n    are annotated and quantified instead of being defined de novo. When\r\n    invoked, the file provided with --count is assumed to contain a simple\r\n    list of clusters. Count mode also forces nohp mode. Formatting details\r\n    below. Default : Not invoked.\r\n\r\n    --nohp : If \\\"--nohp\\\" appears on the command line, it invokes running\r\n    in \\\"no hairpin\\\" mode. RNA folding, hairpin annotation, and MIRNA\r\n    annotation will be skipped (likely saving significant time). Note that\r\n    --count mode forces --nohp mode as well. Default: Not invoked.\r\n\r\nKEY FORMATTING REQUIREMENTS AND ASSUMPTIONS\r\n  Input genome.fasta file\r\n    It is critical that this be the precise genome to which the reads in the\r\n    input .bam file were mapped. If it isn't, validation of the BAM\r\n    alignment file will fail and the run will be aborted.\r\n\r\n    Chromsome names that contain whitespace will be truncated; only the\r\n    first string of non-white-space characters will be maintained. This\r\n    applies both during alignment (where bowtie does this) and during the\r\n    rest of the analysis (where samtools does this, when creating the .fai\r\n    index file).\r\n\r\n    If not already present, a .fai index file for the genome will be created\r\n    using samtools faidx at the beginning of the run. As above, chromosome\r\n    names will be automatically trimmed starting at the first white-space\r\n    character, if present.\r\n\r\n  Small RNA-seq reads.\r\n    FASTA or FASTQ data should be devoid of comment lines and conform to\r\n    FASTA or FASTQ specs. In addition, ShortStack assumes that each read\r\n    will occupy a single line in the file. There is no support for\r\n    paired-end reads. Colorspace-FASTA formatted data (from SOLiD) can have\r\n    comment lines. Format is assumed to conform to colorspace-FASTA\r\n    specifications (beginning with a nucleotide, followed by a string of\r\n    colors [0,1,2,3] or ambiguity codes [.]. For SOLiD data, the quality\r\n    values (_QV.qual files) are not usable as valid inputs.\r\n\r\n  Input .bam file\r\n    As of ShortStack 2.0.0, bam alignment files must have been created with\r\n    the program butter. Validation of bam files requires:\r\n\r\n    If you do make your own BAM alignments, outside of ShortStack, they must\r\n    pass the following validation steps that are performed by ShortStack:\r\n\r\n    1. The header must be present\r\n\r\n    2. The sort order of the file must be 'coordinate', as indicated by the\r\n    SO: tag in the header\r\n\r\n    3. All of the chromosome names found in the header MUST also be found in\r\n    the genome.fasta file\r\n\r\n    4. The data lines must contain the custom XX, XY, and XZ tags added by\r\n    butter.\r\n\r\n    5. If the option --read_group is being used, the specified read_group\r\n    must be mentioned in the header in an @RG line.\r\n\r\n    The BAM file should be indexed and have the corresonding .bam.bai index\r\n    file in the same path as the bamfile. However, this is not required to\r\n    pass validation .. if the index is not found, it will be created during\r\n    the run.\r\n\r\n    Each mapped read must have the CIGAR string set (column 6 in the SAM\r\n    specification) -- ShortStack determines the small RNA lengths by parsing\r\n    the CIGAR string .. if any mappings (except unmapped reads, which are\r\n    ignored) have \"*\" entered instead of a valid CIGAR string ShortStack\r\n    will exit and complain.\r\n\r\n  --count file\r\n    If running in --count mode, the user-provided file is expected to be a\r\n    simple text file containing a list of coordinates in the format :\r\n    [Chr]:[start]-[stop], where Chr is defined in the genome file AND in the\r\n    .bam file, and start and stop are one-based, inclusive. The same\r\n    requirement for short, non-whitespaced chromosome names as discussed\r\n    above holds true for input --count files. Comment lines, that begin with\r\n    '#', are ignored. Tab-delimited files are also accepted, provided the\r\n    first column has the coordinates. The second column in tab-delimted\r\n    files is assumed to be the names of the clusters, and will be used\r\n    accordingly. Any other columns in a tab-delimited input file are\r\n    ignored.\r\n\r\n    Importantly, the 'Results.txt' file produced by a previous ShortStack\r\n    run can be used directly in subsequent runs in --count mode. This is\r\n    useful when comparing identical intervals across multiple samples.\r\n\r\n    Note that count mode also forces nohp mode.\r\n\r\n  --flag_file\r\n    Optional. This is a list of genomic loci to scan for overlap with one or\r\n    more of the small RNA loci found/analyzed by ShortStack. Overlap of any\r\n    length is reported. The format of the file is similar to that of the\r\n    --count file: A tab-delimited text file with coordinates in the first\r\n    column, and names in the second column. Unlike for --count files, names\r\n    are required to be present in the second column for --flag_file.\r\n    Coordinates must be in the format [Chr]:[start]-[stop], where Chr is\r\n    defined in the genome file AND the .bam file, and start and stop are\r\n    one-based, inclusive.\r\n\r\nOUTPUT\r\n  Results.txt\r\n    This is a simple tab-delimited text file. The first line begins with a\r\n    \"#\" (comment) sign, and then lists column headers. Each subsequent line\r\n    describes the key traits of a single cluster.\r\n\r\n    To import this into R, here's a tip to deal with the first line, which\r\n    has the headers but begins with a \"#\" character.\r\n\r\n        >results <- read.table(\"Results.txt\", head=TRUE, sep=\"\\t\", comment.char=\"\")\r\n\r\n    Column 1: Locus : The genome-browser-friendly coordinates of the\r\n    clusters. Coordinates are one-based, inclusive (e.g. Chr1:1-100 refers\r\n    to a 100 nt interval beginning with nt 1 and ending with nt 100).\r\n\r\n    Column 2: Name : Name of cluster. Unless the run was in --count mode and\r\n    the input file of a priori clusters already had names, the names are\r\n    arbitrarily designated as \"Cluster_1\", \"Cluster_2\", etc.\r\n\r\n    Column 3: FlagOverlap : Name(s) of any loci from the flag_file that\r\n    overlap with the cluster are listed. If there are two or more, they are\r\n    comma-separated. If there were none, or no flag_file was provided, than\r\n    a \".\" is present in this column instead.\r\n\r\n    Column 4: Size : Size in nts of the locus.\r\n\r\n    Column 5: MIRNA : Whether this cluster appears to be a MIRNA or not. If\r\n    not, a \".\" is present. If it is a hairpin, but NOT qualified as a MIRNA,\r\n    \"HP\" is indicated. MIRNAs are indicated by \"MIRNA\". If the run was in\r\n    \"--nohp\" mode, than all entries in the column will be \".\".\r\n\r\n    Column 6: MIRNA_Score : Score of the locus via MIRNA analysis by maple.\r\n    Ranges from 0-1, with 1 being the best. \"NA\" if locus was pre-excluded\r\n    from maple analysis (because of excessive length, not coming from a\r\n    clear single-strand, or DicerCall of N).\r\n\r\n    Column 7: Strand : The predominant genomic strand from which the small\r\n    RNA emanate. If \".\", no strand was called.\r\n\r\n    Column 8: Frac_Wat : Fraction of aligned reads to the Watson (e.g. +)\r\n    strand of the cluster. 1 means all were from Watson Strand (e.g. +), 0\r\n    means all were from Crick (e.g. -) strand.\r\n\r\n    Column 9: Total : Total aligned reads within the cluster.\r\n\r\n    Column 10: Uniques : Total aligned reads derived from uniquely mapped\r\n    reads .. e.g., those with XX:i:1.\r\n\r\n    Column 11: DicerCall : If \"N\", the cluster was not annotated as\r\n    dicer-derived, per options --dicermin, --dicermax, and --mindicerfrac.\r\n    Otherwise this is a number, within the --dicermin to --dicermax size\r\n    range, which indicates the most abundant small RNA size within the\r\n    mappings at that cluster.\r\n\r\n    Column 12: PhaseOffset : If \"NA\", phasing p-value was not calculated for\r\n    this cluster. Otherwise, the offset is the one-based genomic position\r\n    with which the cluster appears to be \"in-phase\" (based on the 5' nt of a\r\n    sense-mapped small RNA). Phasing is always in increments identicial to\r\n    the Dicer size call in column 9.\r\n\r\n    Column 13: Phase_pval : If \"NA\", phasing p-value was not calculated for\r\n    this cluster. Otherwise, the p-value is derived from a modified\r\n    hypergeometric distribution, as described below.\r\n\r\n    Column 14: Short : The total mappings from reads with lengths less than\r\n    --dicermin.\r\n\r\n    Column 15: Long : The total mappings from reads with lengths more than\r\n    --dicermax.\r\n\r\n    Columns 16 - the end : The total mappings from reads with the indicated\r\n    lengths. These are the sizes within the Dicer range.\r\n\r\n  Log.txt\r\n    This is a simple log file which records the information that is also\r\n    sent to STDERR during the run.\r\n\r\n  gff3 files\r\n    Two gff3-formatted files are created, one for the 'DCL' loci (those with\r\n    a DicerCall that is NOT N), and the 'N' loci (those with a DicerCall of\r\n    'N'). There are NOT produced in a --count mode run.\r\n\r\n  Hairpin and MIRNA detail files\r\n    Text-based and graphical files for each MIRNA and HP locus are created.\r\n    See the maple documentation for details.\r\n\r\nKEY METHODS\r\n  Adapter trimming and alignments\r\n    Adapter trimming and alignments are handled by butter. See the butter\r\n    documentation for details.\r\n\r\n  Multiple libraries\r\n    ShortStack supports input of multiple small RNA-seq libraries through\r\n    the option --reads. Files are provided as a comma-delimited list. When\r\n    multiple small RNA-seq libraries are input, each one is first aligned\r\n    separately, creating temporary .bam files. When this is complete, they\r\n    are merged into a single alignment, which is given the name \"outdir.bam\"\r\n    in the working directory, where \"outdir\" is the string given in option\r\n    --outdir. During the merging, the read group information is stored, so\r\n    all alignments can be de-convoluted back to their parent libraries if\r\n    desired. The individual .bam alignments created intially are deleted.\r\n\r\n  Read groups\r\n    As of version 1.1.0, ShortStack incorporates the option --read_group.\r\n    When specified, only the alignments from the read group specified by the\r\n    option will be used for analysis. Use of this option demands that the\r\n    indicated read group is specified in the header of the relevant bam\r\n    alignment file.\r\n\r\n    When an analysis uses a bam alignment file that contains more than one\r\n    read group (based on the bam header), and the --read_group option was\r\n    NOT used in the run, the analysis will conclude with a --count mode\r\n    analysis of each read group separately. This is meant to be convenient\r\n    for analyses in which a de-novo small RNA gene annotation is performed\r\n    using a merger of multiple libraries, followed by quantification of each\r\n    locus for each small RNA-seq library separately .. this should\r\n    facilitate the downstream analysis of differential expression, for\r\n    instance.\r\n\r\n  de novo Cluster Discovery\r\n    Cluster discovery proceeds in two simple steps:\r\n\r\n    1. The total depth of small RNA coverage at each occupied nucleotide in\r\n    the genome is examined, and initial 'islands' of coverage are defined as\r\n    continuous stretches of non-zero coverage where the read depth, at at\r\n    lest one point, is greater than or equal to the threshold depth\r\n    specified by option --mindepth. Note that this definition of islands is\r\n    different, and more inclusive, than that used by ShortStack versions\r\n    prior to 2.0.0.\r\n\r\n    2. The initial islands are then temporarily extended on both sides by\r\n    the distance specified by option --pad. Islands that overlap after\r\n    extension are merged. The \"dangling pads\" at the ends of the merged\r\n    clusters are then removed. After all extensions, resultant mergers, and\r\n    end trimmings are performed, the final result is the initial clusters.\r\n    If the run is performed in --nohp mode, these are the final clusters. If\r\n    hairpins and MIRNAs are being examined, some of the clusters may be\r\n    adjusted in position to reflect the extent of the apparent hairpin\r\n    precursor.\r\n\r\n  Hairpin and MIRNA analysis\r\n    MIRNA analysis is performed by maple. For speed, not all clusters are\r\n    subject to analysis by maple. Clusters that exceed 1kb in length, have a\r\n    DicerCall of \"N\", or that don't have a clear single-stranded pattern of\r\n    read alignments are not sent to maple for analysis. The miRType option\r\n    also limits queries based on kingdonm-specific requirement\r\n    (specifically, if the miRTtype is 'animal', than the query can't be\r\n    longer than 250 nts.).\r\n\r\n    See the maple documentation for details of how it works.\r\n\r\n  Quantification of clusters\r\n    All mappings with at lease one nt of overlap within the cluster are\r\n    tallied as being within the cluster. Thus, for a cluster located at\r\n    Chr1:1000-2000, reads mapped to 980-1000, 1100-1123, and 2000-2021 are\r\n    all counted as being within the cluster during quantification. Note that\r\n    it's possible to count the same mapping within non-overlapping clusters.\r\n\r\n  Analysis of Phasing\r\n    'Phasing' describes the periodic mapping of small RNAs to repeating\r\n    intervals equal to their size. It occurs when helical RNA is Diced\r\n    processively from a defined terminus; often the terminus is defined by a\r\n    prior small RNA slicing event followed by RDRP activity, although some\r\n    MIRNA hairpins are also phased. Nearly all documented examples of phased\r\n    small RNA production (in plants) occur for 21nt small RNAs in 21nt\r\n    increments, hence the default settings of ShortStack to examine only\r\n    21-dominated clusters. This can be changed with option --phasesize.\r\n\r\n    ShortStack's basic method to identify phased small RNAs involves\r\n    calculation of a p-value based on the hypergeometric distribution --\r\n    this approach was inspired by Chen et al. (2007) PNAS 104: 3318-3323\r\n    PMID: 17360645. However, ShortStack's method modifies the Chen et al.\r\n    approach to make it more robust at detecting phasing in highly expressed\r\n    clusters with a background of non-phased noise; the method also allows\r\n    phasing analysis in any register within the dicer size range (controlled\r\n    by option --phasesize), and analyzes regions of arbitrary length.\r\n    Finally, ShortStack's analysis of phasing is \"fuzzy\" -- that it, exactly\r\n    phased reads, and those +1 and -1 phase are all counted as \"phased\".\r\n\r\n    Phasing analysis proceeds as follows:\r\n\r\n    1. Clusters to be analyzed must be annotated as Dicer-derived and be\r\n    dominated by the size class indicated by option --phasesize. If\r\n    --phasesize is set to 'all', all clusters within the Dicer size range\r\n    will be analyzed. Conversely, phasing analysis is suppressed for all\r\n    clusters if option --phasesize is set to 'none'.\r\n\r\n    2. Cluster must also have a length of more than 4 x the phase size in\r\n    question .. so, more than 84nts under the default --phasesize 21\r\n    setting. Clusters that are too short are never examined.\r\n\r\n    3. Phasing is only analyzed with respect to the dominant size of the\r\n    cluster. So, for a cluster dominated by 21mers, only phasing in 21nt\r\n    increments will be examined.\r\n\r\n    4. The 5' positions of all sense-mapped small RNAs are tallied as a\r\n    function of genomic position. The 3' positions of all antisense-mapped\r\n    small RNAs are also tallied, after adding 2nts to account for the 2nt,\r\n    3' overhangs left by Dicer processing. After this process, each genomic\r\n    position within the cluster has a number reflecting the number of small\r\n    RNA termini at that position. If the cluster is longer than 20 times the\r\n    phase (e.g. 20 x 21 for the default settings), reads mapped beyond the\r\n    20 x 21 mark are allocated to the beginning of the cluster, keeping it\r\n    in phase. For instance, assuming --phasesize of 21, reads in position\r\n    420 are assigned at 420, those at 421 get flipped back to 1, 422 back to\r\n    2, and so on. This is necessary because p-value calculation involved\r\n    calculation of binomial coefficents, which grow too large to calculate\r\n    (easily) with inputs of more than 500 or so.\r\n\r\n    5. The average abundance of termini across the locus is calculated from\r\n    the above representation of the reads.\r\n\r\n    6. The total abundance in each of the possible phasing registers (there\r\n    are 21 registers in the default mode of --phasesize 21) is calculated.\r\n    The register with the maximum total abundance is the used in p-value\r\n    determination. The offset of this register is also noted; the offset is\r\n    the 1st genomic position representing the 5'-sense position of a phased\r\n    small RNA.\r\n\r\n    7. The p-value within the chosen register is then calculated using the\r\n    cumulative distribution function (CDF) for the hypergeometric\r\n    distribution. Sorry, hard to show equations in plain-text -- see\r\n    Wikipedia's Hypergeometric distribution entry, under CDF. N (the\r\n    population size) is the number of nt positions in the locus. m (the\r\n    number of success states in the population) is the number of possible\r\n    positions in the phasing register of interest, INLCUDING POSITIONS +1\r\n    AND -1 RELATIVE TO THE REGISTER OF INTEREST. This means phasing is\r\n    \"fuzzy\", which is often seen in the known examples of this phenomenon. n\r\n    (the number of draws) is defined as the total number of positions with\r\n    ABOVE AVERAGE abundance. k (the number of successes) is the number of\r\n    phased positions (inlduing the fuzzy +1 and -1 positions) with ABOVE\r\n    AVERAGE abundance. The p-value is then calculated per the hypergeometric\r\n    distribution CDF. NOTE: The restriction of n and k to only above-average\r\n    abundance works well to eliminate low-level noise and focus on the\r\n    dominant small RNA pattern within the locus.\r\n\r\n    Note: P-values are not corrected for multiple-testing. Consider\r\n    adjustment of p-values to control for multiple testing (e.g. Bonferroni,\r\n    Benjamini-Hochberg FDR, etc) if you want a defensible set of phased loci\r\n    from a genome-wide analysis.\r\n\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}